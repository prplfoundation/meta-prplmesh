commit 9f1aa2d7bfcc74a38ebab39892283468b0c7472d
Author: Ivan Efimov <i.efimov@inango-systems.com>
Date:   Fri May 29 00:14:30 2020 +0500

    cmake: allow redefinition BEEROCKS_* vars from cmdline
    
    If CMake variable defined in CMakeLists.txt file like
    
        set(VARIABLE VALUE)
    
    Then it's impossible to redefine it from command line.
    Event tricks like next does not work:
    
        cmake ... -UVARIABLE -DVARIABLE=NEW_VALUE
    
    As a result Yocto/RDKB recipes and OpenWrt/prplWrt makefiles cannot
    redefine variables without modification CMakeLists.txt files.
    
    Define variables interested for redefinition following pattern:
    
        if(NOT DEFINED VARIABLE)
            set(VARIABLE DEFAUL_VALUE)
        endif()
    
    Signed-off-by: Ivan Efimov <i.efimov@inango-systems.com>

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5c52c8f6..49304d40 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -7,7 +7,7 @@ project(prplmesh
 include(cmake/multiap-helpers.cmake)
 
 if(NOT DEFINED TARGET_PLATFORM)
-set(TARGET_PLATFORM "linux")
+    set(TARGET_PLATFORM "linux")
 endif()
 
 option (BUILD_AGENT "Build EasyMesh agent" ON)
@@ -39,7 +39,7 @@ message(STATUS "CMAKE_PREFIX_PATH - ${CMAKE_PREFIX_PATH}")
 message(STATUS "CMAKE_MULTIAP_OUTPUT_DIRECTORY - ${CMAKE_MULTIAP_OUTPUT_DIRECTORY}")
 
 if(NOT CMAKE_BUILD_TYPE)
-set(CMAKE_BUILD_TYPE "Release")
+    set(CMAKE_BUILD_TYPE "Release")
 endif()
 
 set(CMAKE_CXX_STANDARD 11)
@@ -89,8 +89,12 @@ if ("${isSystemDir}" STREQUAL "-1")
 endif ("${isSystemDir}" STREQUAL "-1")
 set (CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
 
-set(INSTALL_PATH "/opt/prplmesh")
-set(TMP_PATH "/tmp/beerocks")
+if(NOT DEFINED INSTALL_PATH)
+    set(INSTALL_PATH "/opt/prplmesh")
+endif()
+if(NOT DEFINED TMP_PATH)
+    set(TMP_PATH "/tmp/beerocks")
+endif()
 
 if(TARGET_PLATFORM STREQUAL "linux")
     set(INSTALL_PATH "${CMAKE_INSTALL_PREFIX}")
@@ -102,22 +106,44 @@ if(TARGET_PLATFORM STREQUAL "linux")
 endif()
 
 # Default values
-set(BEEROCKS_WLAN1_IFACE "wlan0")
-set(BEEROCKS_WLAN2_IFACE "wlan2")
-set(BEEROCKS_WLAN3_IFACE "wlan4")
-set(BEEROCKS_BRIDGE_IFACE "br-lan")
+if(NOT DEFINED BEEROCKS_WLAN1_IFACE)
+    set(BEEROCKS_WLAN1_IFACE "wlan0")
+endif()
+if(NOT DEFINED BEEROCKS_WLAN2_IFACE)
+    set(BEEROCKS_WLAN2_IFACE "wlan2")
+endif()
+if(NOT DEFINED BEEROCKS_WLAN3_IFACE)
+    set(BEEROCKS_WLAN3_IFACE "wlan4")
+endif()
+if(NOT DEFINED BEEROCKS_BRIDGE_IFACE)
+    set(BEEROCKS_BRIDGE_IFACE "br-lan")
+endif()
 if (NOT DEFINED BEEROCKS_BH_WIRE_IFACE)
     set(BEEROCKS_BH_WIRE_IFACE "eth1")
 endif()
-set(BEEROCKS_REPEATER_MODE 0)
+if (NOT DEFINED BEEROCKS_REPEATER_MODE)
+    set(BEEROCKS_REPEATER_MODE 0)
+endif()
 
 # Logging configuration
-set(BEEROCKS_LOG_FILES_ENABLED      "true")
-set(BEEROCKS_LOG_FILES_PATH         "${TMP_PATH}/logs")
-set(BEEROCKS_LOG_FILES_SUFFIX       ".log")
-set(BEEROCKS_LOG_FILES_AUTO_ROLL    "true")
-set(BEEROCKS_LOG_STDOUT_ENABLED     "false")
-set(BEEROCKS_LOG_SYSLOG_ENABLED     "false")
+if (NOT DEFINED BEEROCKS_LOG_FILES_ENABLED)
+    set(BEEROCKS_LOG_FILES_ENABLED      "true")
+endif()
+if (NOT DEFINED BEEROCKS_LOG_FILES_PATH)
+    set(BEEROCKS_LOG_FILES_PATH         "${TMP_PATH}/logs")
+endif()
+if (NOT DEFINED BEEROCKS_LOG_FILES_SUFFIX)
+    set(BEEROCKS_LOG_FILES_SUFFIX       ".log")
+endif()
+if (NOT DEFINED BEEROCKS_LOG_FILES_AUTO_ROLL)
+    set(BEEROCKS_LOG_FILES_AUTO_ROLL    "true")
+endif()
+if (NOT DEFINED BEEROCKS_LOG_STDOUT_ENABLED)
+    set(BEEROCKS_LOG_STDOUT_ENABLED     "false")
+endif()
+if (NOT DEFINED BEEROCKS_LOG_SYSLOG_ENABLED)
+    set(BEEROCKS_LOG_SYSLOG_ENABLED     "false")
+endif()
 
 # Platform specific flags
 if (TARGET_PLATFORM STREQUAL "openwrt")
diff --git a/common/CMakeLists.txt b/common/CMakeLists.txt
index 6aa93f36..6f29c043 100644
--- a/common/CMakeLists.txt
+++ b/common/CMakeLists.txt
@@ -1,7 +1,9 @@
 message("${BoldWhite}Preparing ${BoldGreen}common${BoldWhite} for the ${BoldGreen}${TARGET_PLATFORM}${BoldWhite} platform${ColourReset}")
 
 # Default values
-set(BEEROCKS_PLATFORM_INIT "false")
+if (NOT DEFINED BEEROCKS_PLATFORM_INIT)
+    set(BEEROCKS_PLATFORM_INIT "false")
+endif()
 
 # Modules
 add_subdirectory(beerocks)
diff --git a/common/beerocks/bwl/CMakeLists.txt b/common/beerocks/bwl/CMakeLists.txt
index d23cf23d..a1dfb481 100644
--- a/common/beerocks/bwl/CMakeLists.txt
+++ b/common/beerocks/bwl/CMakeLists.txt
@@ -10,7 +10,9 @@ file(GLOB_RECURSE bwl_common_sources ${MODULE_PATH}/common/*.c*)
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=gnu++11")
 
 # Defaults
-set(BWL_TYPE "DUMMY")
+if (NOT DEFINED BWL_TYPE)
+    set(BWL_TYPE "DUMMY")
+endif()
 add_definitions(-DBEEROCKS_TMP_PATH="${TMP_PATH}")
 
 if (TARGET_PLATFORM STREQUAL "rdkb")
diff --git a/framework/CMakeLists.txt b/framework/CMakeLists.txt
index 55cb6060..7ea7ae0a 100644
--- a/framework/CMakeLists.txt
+++ b/framework/CMakeLists.txt
@@ -2,8 +2,10 @@ project(multiap_framework C CXX)
 
 option(BUILD_EXAMPLES "build examples" OFF)
 
-set(MSGLIB "zmq" CACHE STRING "Which messaging library backend to use")
-set_property(CACHE MSGLIB PROPERTY STRINGS "zmq" "nng" "None")
+if (NOT DEFINED MSGLIB)
+    set(MSGLIB "zmq" CACHE STRING "Which messaging library backend to use")
+    set_property(CACHE MSGLIB PROPERTY STRINGS "zmq" "nng" "None")
+endif()
 
 find_package(json-c REQUIRED)
 
